{
  "components": {
    "schemas": {
      "InvalidError": {
        "properties": {
          "error": {
            "type": "string"
          },
          "valids": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "type": "object"
      },
      "date": {
        "type": "string",
        "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
        "example": "2021-11-29"
      },
      "Pools": {
        "type": "string",
        "enum": ["nusd", "neth"]
      },
      "SwapVolumeResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "admin_fees": {
                "type": "number",
                "format": "float"
              },
              "admin_fees_usd": {
                "type": "number",
                "format": "float"
              },
              "lp_fees": {
                "type": "number",
                "format": "float"
              },
              "lp_fees_usd": {
                "type": "number",
                "format": "float"
              },
              "tx_count": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Chains": {
        "type": "string",
        "enum": [
          "ethereum",
          "avalanche",
          "bsc",
          "polygon",
          "arbitrum",
          "fantom",
          "harmony",
          "boba",
          "optimism",
          "moonriver",
          "aurora"
        ]
      },
      "AirdropResponse": {
        "type": "object",
        "properties": {
          "gas_token": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "price_usd": {
                  "type": "number",
                  "format": "float"
                },
                "airdrop": {
                  "type": "number",
                  "format": "float"
                },
                "tx_count": {
                  "type": "number"
                }
              }
            }
          },
          "stats": {
            "$ref": "#/components/schemas/VolumeResponseStats"
          }
        }
      },
      "TreasuryResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number",
              "format": "float"
            },
            "symbol": {
              "type": "string"
            },
            "usd": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "example": {
          "0x0f2D719407FdBeFF09D87557AbB7232601FD9F29": {
            "amount": 37719.06644798972,
            "usd": 79210.03954077841
          },
          "0x1b84765de8b7566e4ceaf4d0fd3c5af52d3dde4f": {
            "amount": 38851.32649526727,
            "usd": 38851.32649526727
          },
          "0x71ab77b7dbb4fa7e017bc15090b2163221420282": {
            "amount": 1468,
            "usd": 38402.88
          },
          "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2": {
            "amount": 0.003229816033669681,
            "usd": 13.716867204193452
          },
          "total": 156477.96290324986
        }
      },
      "ValidatorResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "gas_price": {
              "type": "number",
              "format": "float"
            },
            "price_usd": {
              "type": "number",
              "format": "float"
            },
            "tx_count": {
              "type": "number"
            },
            "transaction_fee": {
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "VolumeResponseIN": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "price_usd": {
              "type": "number",
              "format": "float"
            },
            "volume": {
              "type": "number",
              "format": "float"
            },
            "tx_count": {
              "type": "number"
            }
          }
        }
      },
      "VolumeResponseOUT": {
        "type": "object",
        "properties": {
          "price_usd": {
            "type": "number",
            "format": "float"
          },
          "volume": {
            "type": "number",
            "format": "float"
          },
          "tx_count": {
            "type": "number"
          }
        }
      },
      "VolumeResponseStats": {
        "type": "object",
        "properties": {
          "usd": {
            "type": "object",
            "properties": {
              "adjusted": {
                "type": "number",
                "format": "float"
              },
              "current": {
                "type": "number",
                "format": "float"
              }
            }
          },
          "volume": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "VolumeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VolumeResponseIN"
              },
              {
                "$ref": "#/components/schemas/VolumeResponseOUT"
              }
            ]
          },
          "stats": {
            "$ref": "#/components/schemas/VolumeResponseStats"
          }
        },
        "example": {
          "data": {
            "2021-10-25": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 1355.478528122246,
                "volume": 123446.9082698944
              },
              "total": {
                "usd": 1355.478528122246
              }
            },
            "2021-10-26": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 1055.4443547315896,
                "volume": 100420
              },
              "total": {
                "usd": 1055.4443547315896
              }
            },
            "2021-10-27": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 757281.1329737306,
                "volume": 75000000
              },
              "total": {
                "usd": 757281.1329737306
              }
            },
            "2021-10-28": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 265722.62781034486,
                "volume": 15805181.048415447
              },
              "total": {
                "usd": 265722.62781034486
              }
            },
            "2021-10-29": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 626228.3000757314,
                "volume": 19759417.301290344
              },
              "total": {
                "usd": 626228.3000757314
              }
            },
            "2021-10-30": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": {
                "usd": 368915.2027302926,
                "volume": 12501172.662217114
              },
              "total": {
                "usd": 368915.2027302926
              }
            }
          },
          "stats": {
            "usd": {
              "adjusted": 2020558.186472953,
              "current": 3624643.8468636745
            },
            "volume": {
              "0xaa88c603d142c371ea0eac8756123c5805edee03": 123289637.9201928
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "SYN Tracker",
    "version": "1.0.0",
    "description": "An API to track useful things about SYN. Still a WIP. View the repo [here](https://github.com/blazewashere/syn-tracker-api)",
    "contact": {
      "email": "blaze@dorime.org"
    },
    "license": {
      "name": "Boost Software License 1.0",
      "url": " https://www.boost.org/LICENSE_1_0.txt"
    }
  },
  "openapi": "3.0.3",
  "servers": [
    { "url": "https://synapse.dorime.org", "description": "production" },
    { "url": "http://localhost:1337", "description": "development" }
  ],
  "paths": {
    "/api/v1/analytics/fees/admin/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "query",
            "name": "block",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "can be negative to indicate a block backwards since the latest block."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": {
                    "0x6B175474E89094C44Da98b954EedeAC495271d0F": 5.037710710295178e21,
                    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": 14505109603,
                    "0xdAC17F958D2ee523a2206206994597C13D831ec7": 8510981976
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "admin fees on a chain",
        "tags": ["Admin Fees"]
      }
    },
    "/api/v1/analytics/fees/admin/{chain}/pending": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "query",
            "name": "block",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "can be negative to indicate a block backwards since the latest block."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": {
                    "0x6B175474E89094C44Da98b954EedeAC495271d0F": 5.037710710295178e21,
                    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": 14505109603,
                    "0xdAC17F958D2ee523a2206206994597C13D831ec7": 8510981976
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "pending admin fees on a chain",
        "tags": ["Admin Fees"]
      }
    },
    "/api/v1/analytics/volume/total": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "format": "float"
                        }
                      },
                      "additionalProperties": {
                        "type": "number",
                        "format": "float"
                      }
                    },
                    "totals": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number",
                        "format": "float"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "total volume of every chain in USD",
        "tags": ["Bridge Volume"]
      }
    },
    "/api/v1/analytics/volume/total/tx_count": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "totals": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "total tx count of every chain",
        "tags": ["Bridge Volume"]
      }
    },
    "/api/v1/analytics/volume/{chain}/filter/{token}/{direction}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "description": "some chains support more tokens such as neth, synfrax, dog, high, etc.",
            "schema": {
              "type": "string",
              "enum": ["nusd", "syn"]
            }
          },
          {
            "in": "path",
            "name": "direction",
            "required": true,
            "description": "count the asset going IN or OUT of the chain",
            "schema": {
              "type": "string",
              "enum": ["in", "out"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VolumeResponse" }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "volume of a token on a bridge going in a direction",
        "tags": ["Bridge Volume"]
      }
    },
    "/api/v1/analytics/volume/{chain}/{direction}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "direction",
            "required": true,
            "description": "count the asset going IN or OUT of the chain",
            "schema": {
              "type": "string",
              "enum": ["in", "out"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VolumeResponse"
                    },
                    "stats": {
                      "type": "object",
                      "properties": {
                        "usd": {
                          "type": "object",
                          "properties": {
                            "adjusted": {
                              "type": "number",
                              "format": "float"
                            },
                            "current": {
                              "type": "number",
                              "format": "float"
                            }
                          }
                        },
                        "volume": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number",
                              "format": "float"
                            },
                            "properties": {
                              "token": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "volume of all tokens on a bridge going in a direction",
        "tags": ["Bridge Volume"]
      }
    },
    "/api/v1/analytics/fees/bridge/{chain}/{token}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "description": "some chains support more tokens such as neth, synfrax, dog, high, etc.",
            "schema": {
              "type": "string",
              "enum": ["nusd", "syn"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "price_usd": {
                            "type": "number",
                            "format": "float"
                          },
                          "fees": {
                            "type": "number",
                            "format": "float"
                          },
                          "tx_count": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "stats": {
                      "$ref": "#/components/schemas/VolumeResponseStats"
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "bridge fees paid for a token on a chain",
        "tags": ["Bridge Fees"]
      }
    },
    "/api/v1/utils/date2block/{chain}/{date}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "block": {
                        "type": "number"
                      },
                      "timestamp": {
                        "type": "number"
                      }
                    },
                    "nullable": true
                  }
                },
                "example": {
                  "2021-11-29": {
                    "block": 573301,
                    "timestamp": 1638145334
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "get a chain block from date",
        "tags": ["Utils"]
      }
    },
    "/api/v1/analytics/fees/validator/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "validator gas fees paid on a chain",
        "tags": ["Validator Gas Fees"]
      }
    },
    "/api/v1/analytics/fees/validator/{chain}/{token}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "description": "some chains support more tokens such as neth, synfrax, dog, high, etc.",
            "schema": {
              "type": "string",
              "enum": ["nusd", "syn"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "validator gas fees paid on a chain for a token",
        "tags": ["Validator Gas Fees"]
      }
    },
    "/api/v1/circ/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supply": { "type": "number", "format": "float" }
                  },
                  "example": {
                    "supply": 161369615.5922159
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "circulatory supply for all chains",
        "tags": ["Circulatory Supply"]
      }
    },
    "/api/v1/circ/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supply": { "type": "number", "format": "float" }
                  },
                  "example": {
                    "supply": 80381211.2436923
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "circulatory supply on a chain",
        "tags": ["Circulatory Supply"]
      }
    },
    "/api/v1/mcap/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "market_cap": { "type": "number", "format": "float" }
                  },
                  "example": {
                    "market_cap": 490563631.4
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "market cap of SYN on all chains",
        "tags": ["Market Cap"]
      }
    },
    "/api/v1/analytics/emissions/weekly/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "query",
            "name": "block",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "can be negative to indicate a block backwards since the latest block."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emission": {
                      "type": "number",
                      "format": "float"
                    }
                  },
                  "example": {
                    "emission": 85750.0003584
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "weekly emission SYN on a chain",
        "tags": ["Emissions"]
      }
    },
    "/api/v1/analytics/emissions/weekly": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "float"
                  },
                  "example": {
                    "arbitrum": 217728.0,
                    "avalanche": 100327.5002016,
                    "boba": 18666.666648,
                    "bsc": 100327.5002016,
                    "ethereum": 85750.0003584,
                    "fantom": 89999.9998128,
                    "harmony": 29999.99999808,
                    "moonriver": 0,
                    "optimism": 35000.00001792,
                    "polygon": 85949.999856
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "weekly emission SYN on all chain",
        "tags": ["Emissions"]
      }
    },
    "/api/v1/mcap/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "market_cap": { "type": "number", "format": "float" }
                  },
                  "example": {
                    "market_cap": 244358882.18
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "market cap of SYN on a chain",
        "tags": ["Market Cap"]
      }
    },
    "/api/v1/analytics/treasury/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "query",
            "name": "block",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreasuryResponse"
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "view treasury balance on a chain",
        "tags": ["Treasury Balance"]
      }
    },
    "/api/v1/analytics/pools/price/virtual": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "number",
                      "format": "float"
                    }
                  },
                  "example": {
                    "arbitrum": {
                      "neth": 1.0024016963118136,
                      "nusd": 1.0007232850597254
                    },
                    "avalanche": {
                      "nusd": 1.000687521718383
                    },
                    "boba": {
                      "neth": 1.000661770020243,
                      "nusd": 1.0013625523269205
                    },
                    "bsc": {
                      "nusd": 1.0010311457156893
                    },
                    "ethereum": {
                      "nusd": 1.0012024894041562
                    },
                    "fantom": {
                      "nusd": 1.0007057177482686
                    },
                    "harmony": {
                      "nusd": 1.0011017801869486
                    },
                    "optimism": {
                      "neth": 1.0004906234797655
                    },
                    "polygon": {
                      "nusd": 1.0003717551698186
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "view virtual price for all chains of a pool",
        "tags": ["Pools"]
      }
    },
    "/api/v1/analytics/pools/volume/{chain}/{pool}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "pool",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pools"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwapVolumeResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "swap volume and fees produced for a pool on a chain",
        "tags": ["Pools"]
      }
    },
    "/api/v1/analytics/pools/price/virtual/{chain}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "query",
            "name": "block",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "can be negative to indicate a block backwards since the latest block."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "float"
                  },
                  "example": {
                    "neth": 1.0006612407063795,
                    "nusd": 1.0013568399877644
                  }
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "view virtual price for a chain of a pool",
        "tags": ["Pools"]
      }
    },
    "/api/v1/analytics/fees/airdrop/{chain}/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirdropResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "airdrop amounts given on a chain",
        "tags": ["Airdrop"]
      }
    },
    "/api/v1/analytics/fees/airdrop/{chain}/{token}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "chain",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chains"
            }
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "description": "some chains support more tokens such as neth, synfrax, dog, high, etc.",
            "schema": {
              "type": "string",
              "enum": ["nusd", "syn"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirdropResponse"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "airdrop amounts given on a chain for a token",
        "tags": ["Airdrop"]
      }
    }
  }
}
